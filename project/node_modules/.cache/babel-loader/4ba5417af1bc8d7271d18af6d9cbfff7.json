{"ast":null,"code":"import { FETCH_DATA, FETCH_SUCCESS, FETCH_FAIL, POST_SUCCESS } from '../actions/actions';\nconst initialState = {\n  players: [],\n  insFetching: false,\n  isPosting: falase,\n  erro: ''\n};\n\nconst playerReducer = (state = initialState, actions) => {\n  switch (actions.type) {\n    case FETCH_FAIL:\n      return { ...state,\n        insFetching: true\n      };\n\n    case FETCH_SUCCESS:\n      return { ...state,\n        insFetching: false,\n        players: actions.payload\n      };\n\n    case FETCH_FAIL:\n      return { ...state,\n        insFetching: false,\n        error: actions.payload\n      };\n\n    case POST_DATA:\n      return { ...state,\n        isPosting: true,\n        players: [...state.players]\n      };\n\n    case POST_SUCCESS:\n      return { ...state,\n        isPosting: false,\n        players: actions.payload\n      };\n\n    case POST_FAIL:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default playerReducer;","map":{"version":3,"sources":["/Users/Janneth/Desktop/redux-practice/project/src/reducers/reducers.js"],"names":["FETCH_DATA","FETCH_SUCCESS","FETCH_FAIL","POST_SUCCESS","initialState","players","insFetching","isPosting","falase","erro","playerReducer","state","actions","type","payload","error","POST_DATA","POST_FAIL"],"mappings":"AAAA,SAAUA,UAAV,EAAsBC,aAAtB,EAAqCC,UAArC,EAAiDC,YAAjD,QAAoE,oBAApE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,WAAW,EAAC,KAFK;AAGjBC,EAAAA,SAAS,EAAEC,MAHM;AAIjBC,EAAAA,IAAI,EAAC;AAJY,CAArB;;AAOA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAACP,YAAP,EAAqBQ,OAArB,KAA+B;AACjD,UAAOA,OAAO,CAACC,IAAf;AACI,SAAKX,UAAL;AACI,aAAO,EACH,GAAGS,KADA;AACOL,QAAAA,WAAW,EAAC;AADnB,OAAP;;AAGA,SAAKL,aAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHL,QAAAA,WAAW,EAAE,KAFV;AAGHD,QAAAA,OAAO,EAAEO,OAAO,CAACE;AAHd,OAAP;;AAKR,SAAKZ,UAAL;AACQ,aAAO,EACH,GAAGS,KADA;AAEHL,QAAAA,WAAW,EAAE,KAFV;AAGHS,QAAAA,KAAK,EAAEH,OAAO,CAACE;AAHZ,OAAP;;AAMR,SAAKE,SAAL;AACI,aAAM,EACF,GAAGL,KADD;AAEFJ,QAAAA,SAAS,EAAE,IAFT;AAGFF,QAAAA,OAAO,EAAE,CAAC,GAAGM,KAAK,CAACN,OAAV;AAHP,OAAN;;AAMJ,SAAKF,YAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHJ,QAAAA,SAAS,EAAE,KAFR;AAGHF,QAAAA,OAAO,EAAEO,OAAO,CAACE;AAHd,OAAP;;AAMJ,SAAKG,SAAL;AACI,aAAO,EACH,GAAGN;AADA,OAAP;;AAKI;AACI,aAAOA,KAAP;AAvChB;AAyCH,CA1CD;;AA4CA,eAAeD,aAAf","sourcesContent":["import  { FETCH_DATA, FETCH_SUCCESS, FETCH_FAIL, POST_SUCCESS} from '../actions/actions';\n\nconst initialState = {\n    players: [],\n    insFetching:false,\n    isPosting: falase,\n    erro:''\n}\n\nconst playerReducer = (state=initialState, actions)=>{\n    switch(actions.type){\n        case FETCH_FAIL:\n            return {\n                ...state, insFetching:true\n            }\n            case FETCH_SUCCESS:\n                return {\n                    ...state,\n                    insFetching: false,\n                    players: actions.payload\n                }\n        case FETCH_FAIL:\n                return {\n                    ...state,\n                    insFetching: false,\n                    error: actions.payload\n                }\n         \n        case POST_DATA:\n            return{\n                ...state,\n                isPosting: true,\n                players: [...state.players]\n            }\n\n        case POST_SUCCESS:\n            return {\n                ...state,\n                isPosting: false,\n                players: actions.payload\n            }    \n\n        case POST_FAIL:\n            return {\n                ...state,\n            }    \n\n                  \n                default:\n                    return state\n    }\n}\n\nexport default playerReducer;"]},"metadata":{},"sourceType":"module"}